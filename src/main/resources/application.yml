
spring:
  data:
    redis:
      url: ${REDIS_URL}
  profiles:
    active:
      dev
  mail:
    host: smtp.gmail.com
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD} # this is app password go on gmail and search
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer:  org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer:  org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.unholy.journalApp.scheduler

    properties:
      security:
        protocol: ${KAFKA_SECURITY_PROTOCOL}
      sasl:
        mechanism: ${KAFKA_SASL_MECHANISM}
        jaas:
          config: ${KAFKA_JAAS_CONFIG}
      session:
        timeout:
          ms: 45000



#adding apis keys here so as to not commit them
weather_api_key: ${WEATHER_API_KEY}






#logging:
#  level:
#    root: warn
#    com:
#      unholy:
#        journalApp:
#          ERROR
